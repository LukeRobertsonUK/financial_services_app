
- if comment.visible_poster_only
  - if ((comment.user == current_user ) || (comment.post.user == current_user)) || (current_user.role == "admin")
    .comments_box
      =comment.content
      %br
      ="#{comment.user.full_name}: #{comment.created_at.to_formatted_s(:long_ordinal)}"
      %br
      - if can? :edit, comment
        = link_to "Edit", edit_comment_path(comment), remote: true
      - if can? :destroy, comment
        = link_to 'Delete', comment, method: :delete, data: { confirm: 'Are you sure?' }
        %br
      #inappropriate_comment.small_text
        =render partial: 'comments/mark_inappropriate_comment', locals: {comment: comment}
      -if can? :manage, :all
        - if comment.aasm_state == "inappropriate"
          .admin_inappropriate_comment_reset
            = button_to "Comment OK: Reset Vote", reset_comment_vote_comment_path(id: comment.id), remote: true

- else
  .comments_box
    =comment.content
    %br
    ="#{comment.user.full_name}: #{comment.created_at.to_formatted_s(:long_ordinal)}"
    %br
      - if can? :edit, comment
        = link_to "Edit", edit_comment_path(comment), remote: true
      - if can? :destroy, comment
        = link_to 'Delete', comment, method: :delete, data: { confirm: 'Are you sure?' }, remote: true
        %br
    #inappropriate_comment.small_text
      =render partial: 'comments/mark_inappropriate_comment', locals: {comment: comment}
    -if can? :manage, :all
      - if comment.aasm_state == "inappropriate"
        .admin_inappropriate_comment_reset
          = button_to "Comment OK: Reset Vote", reset_comment_vote_comment_path(id: comment.id), remote: true
